[{"D:\\dev\\Rest_Calc\\src\\index.js":"1","D:\\dev\\Rest_Calc\\src\\App.js":"2","D:\\dev\\Rest_Calc\\src\\DataSelection\\DataSelection.js":"3","D:\\dev\\Rest_Calc\\src\\DataSelection\\MenuSelection.js":"4","D:\\dev\\Rest_Calc\\src\\DataSelection\\MealSelection.js":"5","D:\\dev\\Rest_Calc\\src\\DataDisplay\\DataDisplay.js":"6","D:\\dev\\Rest_Calc\\src\\utils\\calendar.js":"7","D:\\dev\\Rest_Calc\\src\\utils\\pricesCalc.js":"8","D:\\dev\\Rest_Calc\\src\\utils\\overflowcalc.js":"9","D:\\dev\\Rest_Calc\\src\\About\\about.js":"10","D:\\dev\\Rest_Calc\\src\\DataSelection\\MoneyInput.js":"11","D:\\dev\\Rest_Calc\\src\\utils\\localStorage.js":"12","D:\\dev\\Rest_Calc\\src\\DataSelection\\HoursSelection.js":"13"},{"size":233,"mtime":1666274465462,"results":"14","hashOfConfig":"15"},{"size":2159,"mtime":1669729628349,"results":"16","hashOfConfig":"15"},{"size":1143,"mtime":1669708860406,"results":"17","hashOfConfig":"15"},{"size":1400,"mtime":1669654020887,"results":"18","hashOfConfig":"15"},{"size":3846,"mtime":1669726354753,"results":"19","hashOfConfig":"15"},{"size":2547,"mtime":1666284267119,"results":"20","hashOfConfig":"15"},{"size":2440,"mtime":1673787286569,"results":"21","hashOfConfig":"15"},{"size":939,"mtime":1666301616691,"results":"22","hashOfConfig":"15"},{"size":1904,"mtime":1673786722431,"results":"23","hashOfConfig":"15"},{"size":1493,"mtime":1666285477419,"results":"24","hashOfConfig":"15"},{"size":1282,"mtime":1669709338460,"results":"25","hashOfConfig":"15"},{"size":907,"mtime":1673787312527,"results":"26","hashOfConfig":"15"},{"size":2198,"mtime":1669729598343,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"232fic",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"D:\\dev\\Rest_Calc\\src\\index.js",[],[],[],"D:\\dev\\Rest_Calc\\src\\App.js",["72","73"],[],"import * as React from \"react\"\nimport DataSelection from \"./DataSelection/DataSelection\";\nimport DataDisplay from \"./DataDisplay/DataDisplay\";\nimport { createTheme, ThemeProvider, Divider } from '@mui/material';\nimport { getDejPrice, getMealPrice } from \"./utils/pricesCalc\";\nimport About from \"./About/about\";\nimport useLocalStorage from \"./utils/localStorage\";\nimport HoursSelection from \"./DataSelection/HoursSelection\";\n\nfunction App() {\n  const darktheme = createTheme({\n    palette: {\n      mode: \"dark\",\n    }\n  })\n\n  const [menu, setMenu] = useLocalStorage(\"menu\", \"5*\")\n  const [money, setMoney] = useLocalStorage(\"money\", 0)\n  const [meals, setMeals] = useLocalStorage(\"meals\", [0, 0])\n  \n  const [mealPrices, setMealPrices] = useLocalStorage(\"mealPrices\", [])\n\n  const [total, setTotal] = useLocalStorage(\"total\", {\n    price: 0,\n    number: 0\n  })\n  const [remaining, setRemaining] = useLocalStorage(\"remaining\", 0)\n\n  const [hours, setHours] = useLocalStorage(\"hours\", {diner: \"18:15\", breakfast: \"12:15\", disabled: false})\n\n  React.useEffect(() => {\n    setHours(hours)\n  }, [])\n\n\n  React.useEffect(() => {\n    let dej = {\n      label: \"Petit déjeuners\",\n      number: meals[0],\n      price: Math.round(meals[0] * getDejPrice(menu) * 100) / 100\n    }\n\n    let midi = {\n      label: \"Déjeuners/Dîners\",\n      number: meals[1],\n      price: Math.round(meals[1] * getMealPrice(menu) * 100) / 100\n    }\n\n    setMealPrices([dej, midi])\n\n    let total = {\n      price: Math.round((midi.price + dej.price) * 100) / 100,\n      number: midi.number + dej.number\n    }\n\n    setTotal(total)\n    setRemaining((Math.round((money - total.price) * 100) / 100) || 0)\n  }, [menu, money, meals])\n\n  return (\n    <ThemeProvider theme={darktheme}>\n      <DataSelection menuChange={setMenu} moneyChange={setMoney} mealsChange={setMeals} hours={hours} />\n      <Divider sx={{margin: 1}} />\n      <HoursSelection callback={setHours}/>\n      <Divider sx={{margin: 1}} />\n      <DataDisplay mealPrices={mealPrices} total={total} remaining={remaining} menu={menu}/>\n      <Divider sx={{margin: 1}} />\n      <About />\n    </ThemeProvider>\n\n    );\n}\n\nexport default App;\n","D:\\dev\\Rest_Calc\\src\\DataSelection\\DataSelection.js",[],[],"D:\\dev\\Rest_Calc\\src\\DataSelection\\MenuSelection.js",[],[],"D:\\dev\\Rest_Calc\\src\\DataSelection\\MealSelection.js",["74"],[],"import * as React from \"react\"\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Checkbox, Paper } from \"@mui/material\"\r\nimport { getDaysTillEndOfMonth, isAWeekDay, hasHourPassed } from \"../utils/calendar\"\r\nimport useLocalStorage from \"../utils/localStorage\"\r\n\r\nconst rows = [\r\n    \"Petit déjeuner\",\r\n    \"Déjeuner\",\r\n    \"Dîner\"\r\n]\r\n\r\nexport default function MealSelection({ handleChange, menuSelected, vacations, hours }) {\r\n    const [selected, setSelected] = useLocalStorage(\"mealSelected\", {\r\n        \"Petit déjeuner\": [false, false, false],\r\n        \"Déjeuner\": [false, false, false],\r\n        \"Dîner\": [false, false, false]\r\n    })\r\n\r\n    const onSecondaryChange = (event, type, date) => {\r\n        let sel = { ...selected }\r\n        switch (date) {\r\n            case 'all':\r\n                const setAllTo = event.target.checked\r\n                sel[type] = sel[type].map(x => setAllTo)\r\n                break;\r\n            case 'week':\r\n                sel[type][1] = event.target.checked\r\n                break;\r\n            case 'we':\r\n                sel[type][2] = event.target.checked\r\n                break;\r\n            default:\r\n                console.error(\"Type not found : \" + date)\r\n                break;\r\n        }\r\n        if (sel[type][1] === sel[type][2]) {\r\n            sel[type][0] = sel[type][1]\r\n        }\r\n\r\n        calculateMeals(sel, hours)\r\n        setSelected(sel)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        calculateMeals(selected, hours)\r\n    }, [vacations, selected, hours])\r\n\r\n    const calculateMeals = (sel, hours) => {\r\n        let total = [0, 0]\r\n        let weekDays = getDaysTillEndOfMonth('week', vacations)\r\n        let weekEndDays = getDaysTillEndOfMonth('we', vacations)\r\n\r\n        if (sel[\"Petit déjeuner\"][1]) total[0] += weekDays\r\n        if (sel[\"Petit déjeuner\"][2]) total[0] += weekEndDays\r\n\r\n        if (sel[\"Déjeuner\"][1]) total[1] += weekDays\r\n        if (sel[\"Déjeuner\"][2]) total[1] += weekEndDays\r\n        if (hours && !hours.disabled && !hasHourPassed(new Date(), hours.breakfast) \r\n            && ((isAWeekDay(new Date()) && sel[\"Déjeuner\"][1]) \r\n                || (!isAWeekDay(new Date()) && sel[\"Déjeuner\"][2])\r\n               )) {\r\n            total[1] += 1\r\n        }\r\n\r\n        if (sel[\"Dîner\"][1]) total[1] += weekDays\r\n        if (sel[\"Dîner\"][2]) total[1] += weekEndDays / 2\r\n\r\n        if (hours && !hours.disabled && !hasHourPassed(new Date(), hours.diner) \r\n            && ((isAWeekDay(new Date()) && sel[\"Dîner\"][1]) \r\n            || (!isAWeekDay(new Date()) && sel[\"Dîner\"][2])\r\n            )) {\r\n            total[1] += 1\r\n        }\r\n        handleChange(total)\r\n    }\r\n\r\n    return (<TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell></TableCell>\r\n                    <TableCell>Semaine entière (7J)</TableCell>\r\n                    <TableCell>Semaine de cours (5J)</TableCell>\r\n                    <TableCell>Week-End (2J)</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {rows.map(x => (\r\n                    <TableRow key={x}>\r\n                        <TableCell>{x}</TableCell>\r\n                        <TableCell><Checkbox checked={selected[x][0]} onChange={e => onSecondaryChange(e, x, 'all')} /></TableCell>\r\n                        <TableCell><Checkbox checked={selected[x][1]} onChange={e => onSecondaryChange(e, x, 'week')} /></TableCell>\r\n                        <TableCell><Checkbox checked={selected[x][2] && menuSelected !== '5'} disabled={menuSelected === '5'} onChange={e => onSecondaryChange(e, x, 'we')} /></TableCell>\r\n                    </TableRow>\r\n                ))}\r\n            </TableBody>\r\n        </Table>\r\n    </TableContainer>)\r\n}","D:\\dev\\Rest_Calc\\src\\DataDisplay\\DataDisplay.js",[],[],"D:\\dev\\Rest_Calc\\src\\utils\\calendar.js",[],[],"D:\\dev\\Rest_Calc\\src\\utils\\pricesCalc.js",[],[],"D:\\dev\\Rest_Calc\\src\\utils\\overflowcalc.js",[],[],"D:\\dev\\Rest_Calc\\src\\About\\about.js",[],[],"D:\\dev\\Rest_Calc\\src\\DataSelection\\MoneyInput.js",["75","76","77"],[],"import * as React from \"react\"\r\nimport { TextField, Box, InputAdornment } from \"@mui/material\"\r\nimport { getTotalMoney } from \"../utils/pricesCalc\"\r\nimport useLocalStorage from \"../utils/localStorage\"\r\n\r\nexport default function MoneyInput({ handleChange, menu }) {\r\n    const [money, setMoney] = useLocalStorage(\"money\", 0)\r\n    const [hasChanged, setChange] = React.useState(false)\r\n\r\n    const handleMoneyChange = (e) => {\r\n        setMoney(e.target.value)\r\n        handleChange(e.target.value)\r\n        setChange(true)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if ((!money && menu) || !hasChanged && !localStorage.getItem(\"money\")) {\r\n            setMoney(getTotalMoney(menu))\r\n            handleChange(getTotalMoney(menu))\r\n        }\r\n        if (!money && menu) setChange(false)\r\n    }, [menu])\r\n\r\n    return (<Box \r\n    autoComplete=\"off\" \r\n    component=\"form\"\r\n    noValidate\r\n    sx={{\r\n        marginBottom: 1\r\n    }}>\r\n        <TextField \r\n            fullWidth\r\n            label=\"Quantité d'argent restante\" \r\n            onChange={handleMoneyChange}\r\n            value={money}\r\n            type=\"number\"\r\n            InputProps={{\r\n                 endAdornment: <InputAdornment position=\"end\">€</InputAdornment>\r\n            }}\r\n            />\r\n    </Box>)\r\n}","D:\\dev\\Rest_Calc\\src\\utils\\localStorage.js",[],[],"D:\\dev\\Rest_Calc\\src\\DataSelection\\HoursSelection.js",["78"],[],"import * as React from \"react\"\r\nimport { Divider, Paper, TextField, Checkbox, FormControlLabel } from \"@mui/material\"\r\nimport useLocalStorage from \"../utils/localStorage\"\r\nexport default function HoursSelection({ callback }) {\r\n    const [breakfastVal, setBreakFastVal] = React.useState(JSON.parse(localStorage.getItem(\"hours\"))?.breakfast ?? \"12:15\")\r\n    const [dinerVal, setDinerVal] = React.useState(JSON.parse(localStorage.getItem(\"hours\"))?.diner ?? \"18:15\")\r\n    const [disabledTextField, setDisabled] = useLocalStorage(\"countToday\", false)\r\n\r\n    React.useEffect(() => {\r\n        if (dinerVal && breakfastVal) {\r\n            callback({\r\n                diner: dinerVal,\r\n                breakfast: breakfastVal,\r\n                disabled: disabledTextField\r\n            })\r\n        }\r\n    }, [breakfastVal, dinerVal, disabledTextField])\r\n\r\n    return (<Paper elevation={12} sx={{padding: 1}}>\r\n        <FormControlLabel label=\"Compter les repas d'aujourd'ui\" control={<Checkbox onChange={e => {\r\n            if (!e.target.checked) {\r\n                setDisabled(true)\r\n            } else {\r\n                setDisabled(false)\r\n            }\r\n        }} checked={!disabledTextField} />}/>\r\n\r\n        <TextField \r\n            type=\"time\"\r\n            label=\"Heure du déjeuner\"\r\n            InputLabelProps={{\r\n                shrink: true\r\n            }}\r\n            inputProps={{\r\n                step: 300\r\n            }}\r\n            value={breakfastVal}\r\n            onChange={(e) => setBreakFastVal(e.target.value)}\r\n            sx={{width: 150, display: \"inline-flex\"}}\r\n            disabled={disabledTextField}\r\n        />\r\n        <Divider orientation=\"vertical\" flexItem sx={{marginLeft: 1, marginRight: 1, display: \"inline-flex\"}} />\r\n        <TextField \r\n            type=\"time\"\r\n            label=\"Heure du dîner\"\r\n            value={dinerVal}\r\n            InputLabelProps={{\r\n                shrink: true\r\n            }}\r\n            inputProps={{\r\n                step: 300\r\n            }}\r\n            onChange={(e) => setDinerVal(e.target.value)}\r\n            sx={{width: 150, display: \"inline-flex\"}}\r\n            disabled={disabledTextField}\r\n        />\r\n    </Paper>)\r\n}",{"ruleId":"79","severity":1,"message":"80","line":33,"column":6,"nodeType":"81","endLine":33,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":58,"column":6,"nodeType":"81","endLine":58,"endColumn":26,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"85","line":46,"column":8,"nodeType":"81","endLine":46,"endColumn":36,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":17,"column":30,"nodeType":"89","messageId":"90","endLine":17,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":17,"column":45,"nodeType":"89","messageId":"90","endLine":17,"endColumn":47},{"ruleId":"79","severity":1,"message":"91","line":22,"column":8,"nodeType":"81","endLine":22,"endColumn":14,"suggestions":"92"},{"ruleId":"79","severity":1,"message":"93","line":17,"column":8,"nodeType":"81","endLine":17,"endColumn":51,"suggestions":"94"},"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'hours' and 'setHours'. Either include them or remove the dependency array.","ArrayExpression",["95"],"React Hook React.useEffect has missing dependencies: 'setMealPrices', 'setRemaining', and 'setTotal'. Either include them or remove the dependency array.",["96"],"React Hook React.useEffect has a missing dependency: 'calculateMeals'. Either include it or remove the dependency array.",["97"],"no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","React Hook React.useEffect has missing dependencies: 'handleChange', 'hasChanged', 'money', and 'setMoney'. Either include them or remove the dependency array. If 'handleChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["98"],"React Hook React.useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["99"],{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [hours, setHours]",{"range":"110","text":"111"},"Update the dependencies array to be: [menu, money, meals, setMealPrices, setTotal, setRemaining]",{"range":"112","text":"113"},"Update the dependencies array to be: [vacations, selected, hours, calculateMeals]",{"range":"114","text":"115"},"Update the dependencies array to be: [handleChange, hasChanged, menu, money, setMoney]",{"range":"116","text":"117"},"Update the dependencies array to be: [breakfastVal, callback, dinerVal, disabledTextField]",{"range":"118","text":"119"},[1089,1091],"[hours, setHours]",[1669,1689],"[menu, money, meals, setMealPrices, setTotal, setRemaining]",[1514,1542],"[vacations, selected, hours, calculateMeals]",[797,803],"[handleChange, hasChanged, menu, money, setMoney]",[800,843],"[breakfastVal, callback, dinerVal, disabledTextField]"]