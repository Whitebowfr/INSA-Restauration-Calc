{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\Rest_Calc\\\\src\\\\DataDisplay\\\\DataDisplay.js\";\nimport * as React from \"react\";\nimport { Paper, Table, TableCell, TableBody, TableHead, TableContainer, TableRow } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { getOFPossibilitesAsList, getNEGPossibilitesAsList } from \"../utils/overflowcalc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DataDisplay(_ref) {\n  let {\n    mealPrices,\n    total,\n    remaining,\n    menu\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 12,\n    sx: {\n      padding: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        marginBottom: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Co\\xFBt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [mealPrices.map(x => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: x.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: x.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [x.price, \" \\u20AC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: '#000'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: total.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [total.price, \" \\u20AC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: remaining >= 0 ? '#0a0' : '#a00'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Restant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [remaining, \" \\u20AC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), remaining === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 20,\n      sx: {\n        padding: 1\n      },\n      children: remaining >= 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          whiteSpace: \"pre-line\"\n        },\n        children: [\"Vous avez \", remaining, \" \\u20AC restant. Avec cela, vous pouvez (au choix) :\", getOFPossibilitesAsList(remaining, menu, mealPrices[0].number > 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Il vous manque \", Math.abs(remaining), \" \\u20AC. Il vous faudra (au choix) :\", getNEGPossibilitesAsList(remaining, menu, mealPrices[0].number > 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this);\n}\n_c = DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","Paper","Table","TableCell","TableBody","TableHead","TableContainer","TableRow","Typography","getOFPossibilitesAsList","getNEGPossibilitesAsList","DataDisplay","mealPrices","total","remaining","menu","padding","marginBottom","map","x","label","number","price","backgroundColor","whiteSpace","Math","abs"],"sources":["D:/dev/Rest_Calc/src/DataDisplay/DataDisplay.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Paper, Table, TableCell, TableBody, TableHead, TableContainer, TableRow } from \"@mui/material\"\r\nimport {Typography} from \"@mui/material\"\r\nimport { getOFPossibilitesAsList, getNEGPossibilitesAsList } from \"../utils/overflowcalc\"\r\n\r\nexport default function DataDisplay({ mealPrices, total, remaining, menu }) {\r\n    return (<Paper elevation={12} sx={{padding: 1}}>\r\n        <TableContainer component={Paper} sx={{marginBottom: 1}}>\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell></TableCell>\r\n                        <TableCell>Nombre</TableCell>\r\n                        <TableCell>Coût</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {mealPrices.map(x => (\r\n                        <TableRow>\r\n                            <TableCell>{x.label}</TableCell>\r\n                            <TableCell>{x.number}</TableCell>\r\n                            <TableCell>{x.price} €</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    <TableRow sx={{ backgroundColor: '#000' }}>\r\n                        <TableCell>TOTAL</TableCell>\r\n                        <TableCell>{total.number}</TableCell>\r\n                        <TableCell>{total.price} €</TableCell>\r\n                    </TableRow>\r\n                    <TableRow sx={{ backgroundColor: (remaining >= 0 ? '#0a0' : '#a00') }}>\r\n                        <TableCell>Restant</TableCell>\r\n                        <TableCell></TableCell>\r\n                        <TableCell>{remaining} €</TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        { remaining === 0 ? <></> :\r\n        <Paper elevation={20} sx={{\r\n            padding: 1\r\n        }}>\r\n            {remaining >= 0 ? <Typography variant=\"body1\" style={{whiteSpace: \"pre-line\"}}>\r\n                Vous avez {remaining} € restant. Avec cela, vous pouvez (au choix) :\r\n                {getOFPossibilitesAsList(remaining, menu, mealPrices[0].number > 0)}\r\n            </Typography> : <Typography variant=\"h6\">\r\n                    Il vous manque {Math.abs(remaining)} €. Il vous faudra (au choix) :\r\n                    {getNEGPossibilitesAsList(remaining, menu, mealPrices[0].number > 0)}\r\n                </Typography>}\r\n        </Paper>\r\n        }\r\n    </Paper>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}