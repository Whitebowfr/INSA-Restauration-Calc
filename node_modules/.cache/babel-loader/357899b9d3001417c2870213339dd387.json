{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getDaysTillEndOfMonth = void 0;\nvar types_1 = require(\"./types\");\n/**\r\n * @param type If the users stays for the week ends\r\n * @param includesVacations If the user stays for the vacations\r\n * @returns The number of days until the end of the month\r\n */\nfunction getDaysTillEndOfMonth(type, includesVacations) {\n  var dateToday = new Date();\n  dateToday.setDate(dateToday.getDate() + 1);\n  var endDate = new Date(dateToday.getFullYear(), dateToday.getMonth() + 1, 0);\n  endDate.setDate(endDate.getDate() + 1);\n  var total = 0;\n  while (dateToday <= endDate) {\n    // Checking if the date is on a weekend\n    if (dateToday.getDay() !== 0 && dateToday.getDay() !== 6) {\n      if (type === types_1.weekTypes.WEEK) {\n        total += includesVacations ? 1 : Number(checkForVacation(dateToday));\n      }\n    } else if (type === types_1.weekTypes.WEEKENDS) {\n      total += includesVacations ? 1 : Number(checkForVacation(dateToday));\n    }\n    dateToday.setDate(dateToday.getDate() + 1);\n  }\n  return total;\n}\nexports.getDaysTillEndOfMonth = getDaysTillEndOfMonth;\n// Les journées sont exclusives (ex. pour les vacances du 16 décembre, la journée du 16 est comptée comme ouvrée)\nvar vacations = [\n// Automne\n[1666994400000, 1667689200000],\n// Noel\n[1671231600000, 1672614000000],\n// Hiver\n[1676070000000, 1676761200000],\n// Printemps\n[1680904800000, 1682200800000],\n// Grandes vacances\n[1684533600000, 1694988000000]];\n/**\r\n * @param date The date to check\r\n * @returns If the date is on a holiday\r\n */\nfunction checkForVacation(date) {\n  var dateTimeStamp = date.getTime();\n  var flag = false;\n  // I'm pretty sure vacations.every should work as well\n  vacations.forEach(function (arr) {\n    if (dateTimeStamp > arr[0] && dateTimeStamp < arr[1]) flag = true;\n  });\n  return flag;\n}","map":{"version":3,"names":["exports","__esModule","getDaysTillEndOfMonth","types_1","require","type","includesVacations","dateToday","Date","setDate","getDate","endDate","getFullYear","getMonth","total","getDay","weekTypes","WEEK","Number","checkForVacation","WEEKENDS","vacations","date","dateTimeStamp","getTime","flag","forEach","arr"],"sources":["D:/dev/Rest_Calc/src/utils/calendar.js"],"sourcesContent":["\"use strict\";\r\nexports.__esModule = true;\r\nexports.getDaysTillEndOfMonth = void 0;\r\nvar types_1 = require(\"./types\");\r\n/**\r\n * @param type If the users stays for the week ends\r\n * @param includesVacations If the user stays for the vacations\r\n * @returns The number of days until the end of the month\r\n */\r\nfunction getDaysTillEndOfMonth(type, includesVacations) {\r\n    var dateToday = new Date();\r\n    dateToday.setDate(dateToday.getDate() + 1);\r\n    var endDate = new Date(dateToday.getFullYear(), dateToday.getMonth() + 1, 0);\r\n    endDate.setDate(endDate.getDate() + 1);\r\n    var total = 0;\r\n    while (dateToday <= endDate) {\r\n        // Checking if the date is on a weekend\r\n        if (dateToday.getDay() !== 0 && dateToday.getDay() !== 6) {\r\n            if (type === types_1.weekTypes.WEEK) {\r\n                total += (includesVacations ? 1 : Number(checkForVacation(dateToday)));\r\n            }\r\n        }\r\n        else if (type === types_1.weekTypes.WEEKENDS) {\r\n            total += (includesVacations ? 1 : Number(checkForVacation(dateToday)));\r\n        }\r\n        dateToday.setDate(dateToday.getDate() + 1);\r\n    }\r\n    return total;\r\n}\r\nexports.getDaysTillEndOfMonth = getDaysTillEndOfMonth;\r\n// Les journées sont exclusives (ex. pour les vacances du 16 décembre, la journée du 16 est comptée comme ouvrée)\r\nvar vacations = [\r\n    // Automne\r\n    [1666994400000, 1667689200000],\r\n    // Noel\r\n    [1671231600000, 1672614000000],\r\n    // Hiver\r\n    [1676070000000, 1676761200000],\r\n    // Printemps\r\n    [1680904800000, 1682200800000],\r\n    // Grandes vacances\r\n    [1684533600000, 1694988000000]\r\n];\r\n/**\r\n * @param date The date to check\r\n * @returns If the date is on a holiday\r\n */\r\nfunction checkForVacation(date) {\r\n    var dateTimeStamp = date.getTime();\r\n    var flag = false;\r\n    // I'm pretty sure vacations.every should work as well\r\n    vacations.forEach(function (arr) {\r\n        if (dateTimeStamp > arr[0] && dateTimeStamp < arr[1])\r\n            flag = true;\r\n    });\r\n    return flag;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,qBAAqB,GAAG,KAAK,CAAC;AACtC,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA,SAASF,qBAAqB,CAACG,IAAI,EAAEC,iBAAiB,EAAE;EACpD,IAAIC,SAAS,GAAG,IAAIC,IAAI,EAAE;EAC1BD,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,OAAO,EAAE,GAAG,CAAC,CAAC;EAC1C,IAAIC,OAAO,GAAG,IAAIH,IAAI,CAACD,SAAS,CAACK,WAAW,EAAE,EAAEL,SAAS,CAACM,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAC5EF,OAAO,CAACF,OAAO,CAACE,OAAO,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;EACtC,IAAII,KAAK,GAAG,CAAC;EACb,OAAOP,SAAS,IAAII,OAAO,EAAE;IACzB;IACA,IAAIJ,SAAS,CAACQ,MAAM,EAAE,KAAK,CAAC,IAAIR,SAAS,CAACQ,MAAM,EAAE,KAAK,CAAC,EAAE;MACtD,IAAIV,IAAI,KAAKF,OAAO,CAACa,SAAS,CAACC,IAAI,EAAE;QACjCH,KAAK,IAAKR,iBAAiB,GAAG,CAAC,GAAGY,MAAM,CAACC,gBAAgB,CAACZ,SAAS,CAAC,CAAE;MAC1E;IACJ,CAAC,MACI,IAAIF,IAAI,KAAKF,OAAO,CAACa,SAAS,CAACI,QAAQ,EAAE;MAC1CN,KAAK,IAAKR,iBAAiB,GAAG,CAAC,GAAGY,MAAM,CAACC,gBAAgB,CAACZ,SAAS,CAAC,CAAE;IAC1E;IACAA,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,OAAO,EAAE,GAAG,CAAC,CAAC;EAC9C;EACA,OAAOI,KAAK;AAChB;AACAd,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB;AACrD;AACA,IAAImB,SAAS,GAAG;AACZ;AACA,CAAC,aAAa,EAAE,aAAa,CAAC;AAC9B;AACA,CAAC,aAAa,EAAE,aAAa,CAAC;AAC9B;AACA,CAAC,aAAa,EAAE,aAAa,CAAC;AAC9B;AACA,CAAC,aAAa,EAAE,aAAa,CAAC;AAC9B;AACA,CAAC,aAAa,EAAE,aAAa,CAAC,CACjC;AACD;AACA;AACA;AACA;AACA,SAASF,gBAAgB,CAACG,IAAI,EAAE;EAC5B,IAAIC,aAAa,GAAGD,IAAI,CAACE,OAAO,EAAE;EAClC,IAAIC,IAAI,GAAG,KAAK;EAChB;EACAJ,SAAS,CAACK,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC7B,IAAIJ,aAAa,GAAGI,GAAG,CAAC,CAAC,CAAC,IAAIJ,aAAa,GAAGI,GAAG,CAAC,CAAC,CAAC,EAChDF,IAAI,GAAG,IAAI;EACnB,CAAC,CAAC;EACF,OAAOA,IAAI;AACf"},"metadata":{},"sourceType":"module"}