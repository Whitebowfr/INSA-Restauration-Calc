{"ast":null,"code":"import { getDejPrice, getMealPrice } from \"./pricesCalc\";\nconst data = [{\n  price: 1.87,\n  label: \"Acheter X cookies\"\n}, {\n  price: 1.40,\n  label: \"Acheter X cannettes\"\n}, {\n  price: 4,\n  label: \"Acheter X croque-monsieurs/paninis\"\n}, {\n  price: \"dej\",\n  label: \"Aller X fois au point A\"\n}, {\n  price: \"meal\",\n  label: \"Doubler X fois au RI\"\n}];\nexport function getOFPossibilitesAsList(remaining, menu, isGoingToPtA) {\n  let returnString = \"\\n\";\n  data.forEach(x => {\n    let amount = 0;\n    if (typeof x.price === \"number\") {\n      amount = Math.floor(remaining / x.price);\n    } else {\n      amount = Math.floor(remaining / (x.price === \"dej\" ? getDejPrice(menu) : getMealPrice(menu)));\n    }\n    if (amount > 0 && (!isGoingToPtA || x.price !== \"dej\")) {\n      returnString += \"- \" + x.label.replace('X', amount) + \"\\n\";\n    }\n  });\n  return returnString;\n}\nexport function getNEGPossibilitesAsList(remaining, menu, dejNumber) {\n  let returnString = \"\\n\";\n  let missing = Math.abs(remaining);\n  if (dejNumber > 0) {\n    let dejAmount = Math.ceil(missing / getDejPrice(menu));\n    if (dejAmount > dejNumber) {\n      let stillMissing = (dejAmount - dejNumber) * getDejPrice(menu);\n      let mealAmount = Math.ceil(stillMissing / getMealPrice(menu));\n      returnString += \" - Ne pas aller au point A du tout et ne pas aller au RI \" + mealAmount + \" fois (F)\\n\";\n    } else {\n      returnString += \"- Ne pas aller au point A \" + dejAmount + \" fois\\n\";\n    }\n  }\n  let mealAmountB = Math.ceil(missing / getMealPrice(menu));\n  returnString += \"- Ne pas aller au RI \" + mealAmountB + \" fois\";\n  return returnString;\n}","map":{"version":3,"names":["getDejPrice","getMealPrice","data","price","label","getOFPossibilitesAsList","remaining","menu","isGoingToPtA","returnString","forEach","x","amount","Math","floor","replace","getNEGPossibilitesAsList","dejNumber","missing","abs","dejAmount","ceil","stillMissing","mealAmount","mealAmountB"],"sources":["D:/dev/Rest_Calc/src/utils/overflowcalc.js"],"sourcesContent":["import { getDejPrice, getMealPrice } from \"./pricesCalc\"\r\n\r\nconst data = [\r\n    {\r\n        price: 1.87,\r\n        label: \"Acheter X cookies\"\r\n    },\r\n    {\r\n        price: 1.40,\r\n        label: \"Acheter X cannettes\"\r\n    },\r\n    {\r\n        price: 4,\r\n        label: \"Acheter X croque-monsieurs/paninis\"\r\n    },\r\n    {\r\n        price: \"dej\",\r\n        label: \"Aller X fois au point A\"\r\n    },\r\n    {\r\n        price: \"meal\",\r\n        label: \"Doubler X fois au RI\"\r\n    }\r\n]\r\n\r\nexport function getOFPossibilitesAsList(remaining, menu, isGoingToPtA) {\r\n    let returnString = \"\\n\"\r\n    data.forEach(x => {\r\n        let amount = 0\r\n        if (typeof(x.price) === \"number\") {\r\n            amount = Math.floor(remaining / x.price)\r\n        } else {\r\n            amount = Math.floor(remaining / (x.price === \"dej\" ? getDejPrice(menu) : getMealPrice(menu)))\r\n        }\r\n        if (amount > 0 && (!isGoingToPtA || x.price !== \"dej\")) {\r\n            returnString += \"- \" + x.label.replace('X', amount) + \"\\n\"\r\n        }\r\n    })\r\n    return returnString\r\n}\r\n\r\n\r\nexport function getNEGPossibilitesAsList(remaining, menu, dejNumber) {\r\n    let returnString = \"\\n\"\r\n    let missing = Math.abs(remaining)\r\n    if (dejNumber > 0) {\r\n        let dejAmount = Math.ceil(missing / getDejPrice(menu))\r\n        if (dejAmount > dejNumber) {\r\n            let stillMissing = (dejAmount - dejNumber) * getDejPrice(menu)\r\n            let mealAmount = Math.ceil(stillMissing / getMealPrice(menu))\r\n            returnString += \" - Ne pas aller au point A du tout et ne pas aller au RI \" + mealAmount + \" fois (F)\\n\" \r\n        } else {\r\n            returnString += \"- Ne pas aller au point A \" + dejAmount + \" fois\\n\"\r\n        }\r\n    }\r\n    let mealAmountB = Math.ceil(missing / getMealPrice(menu))\r\n    returnString += \"- Ne pas aller au RI \" + mealAmountB + \" fois\"\r\n    return returnString\r\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,YAAY,QAAQ,cAAc;AAExD,MAAMC,IAAI,GAAG,CACT;EACIC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACX,CAAC,EACD;EACID,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACX,CAAC,EACD;EACID,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE;AACX,CAAC,EACD;EACID,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE;AACX,CAAC,EACD;EACID,KAAK,EAAE,MAAM;EACbC,KAAK,EAAE;AACX,CAAC,CACJ;AAED,OAAO,SAASC,uBAAuB,CAACC,SAAS,EAAEC,IAAI,EAAEC,YAAY,EAAE;EACnE,IAAIC,YAAY,GAAG,IAAI;EACvBP,IAAI,CAACQ,OAAO,CAACC,CAAC,IAAI;IACd,IAAIC,MAAM,GAAG,CAAC;IACd,IAAI,OAAOD,CAAC,CAACR,KAAM,KAAK,QAAQ,EAAE;MAC9BS,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACR,SAAS,GAAGK,CAAC,CAACR,KAAK,CAAC;IAC5C,CAAC,MAAM;MACHS,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACR,SAAS,IAAIK,CAAC,CAACR,KAAK,KAAK,KAAK,GAAGH,WAAW,CAACO,IAAI,CAAC,GAAGN,YAAY,CAACM,IAAI,CAAC,CAAC,CAAC;IACjG;IACA,IAAIK,MAAM,GAAG,CAAC,KAAK,CAACJ,YAAY,IAAIG,CAAC,CAACR,KAAK,KAAK,KAAK,CAAC,EAAE;MACpDM,YAAY,IAAI,IAAI,GAAGE,CAAC,CAACP,KAAK,CAACW,OAAO,CAAC,GAAG,EAAEH,MAAM,CAAC,GAAG,IAAI;IAC9D;EACJ,CAAC,CAAC;EACF,OAAOH,YAAY;AACvB;AAGA,OAAO,SAASO,wBAAwB,CAACV,SAAS,EAAEC,IAAI,EAAEU,SAAS,EAAE;EACjE,IAAIR,YAAY,GAAG,IAAI;EACvB,IAAIS,OAAO,GAAGL,IAAI,CAACM,GAAG,CAACb,SAAS,CAAC;EACjC,IAAIW,SAAS,GAAG,CAAC,EAAE;IACf,IAAIG,SAAS,GAAGP,IAAI,CAACQ,IAAI,CAACH,OAAO,GAAGlB,WAAW,CAACO,IAAI,CAAC,CAAC;IACtD,IAAIa,SAAS,GAAGH,SAAS,EAAE;MACvB,IAAIK,YAAY,GAAG,CAACF,SAAS,GAAGH,SAAS,IAAIjB,WAAW,CAACO,IAAI,CAAC;MAC9D,IAAIgB,UAAU,GAAGV,IAAI,CAACQ,IAAI,CAACC,YAAY,GAAGrB,YAAY,CAACM,IAAI,CAAC,CAAC;MAC7DE,YAAY,IAAI,2DAA2D,GAAGc,UAAU,GAAG,aAAa;IAC5G,CAAC,MAAM;MACHd,YAAY,IAAI,4BAA4B,GAAGW,SAAS,GAAG,SAAS;IACxE;EACJ;EACA,IAAII,WAAW,GAAGX,IAAI,CAACQ,IAAI,CAACH,OAAO,GAAGjB,YAAY,CAACM,IAAI,CAAC,CAAC;EACzDE,YAAY,IAAI,uBAAuB,GAAGe,WAAW,GAAG,OAAO;EAC/D,OAAOf,YAAY;AACvB"},"metadata":{},"sourceType":"module"}