{"ast":null,"code":"export function getDaysTillEndOfMonth(type,includesVacations){var dateToday=new Date();dateToday.setDate(dateToday.getDate()+1);var endDate=new Date(dateToday.getFullYear(),dateToday.getMonth()+1,0);endDate.setDate(endDate.getDate()+1);var total=0;while(dateToday<=endDate){if(dateToday.getDay()!==0&&dateToday.getDay()!==6){if(type===\"week\"){total+=includesVacations?1:!checkForVacation(dateToday);}}else if(type===\"we\"){total+=includesVacations?1:!checkForVacation(dateToday);}dateToday.setDate(dateToday.getDate()+1);}return total;}// Les journées sont exclusives (ex. pour les vacances du 16 décembre, la journée du 16 est comptée comme ouvrée)\nvar vacations=[// Automne\n[1666994400000,1667689200000],// Noel\n[1671231600000,1672614000000],// Hiver\n[1676070000000,1676761200000],// Printemps\n[1680904800000,1682200800000],// Grandes vacances\n[1684533600000,1694988000000]];function checkForVacation(date){var dateTimeStamp=date.getTime();var flag=false;vacations.forEach(function(arr){if(dateTimeStamp>arr[0]&&dateTimeStamp<arr[1])flag=true;});return flag;}","map":{"version":3,"names":["getDaysTillEndOfMonth","type","includesVacations","dateToday","Date","setDate","getDate","endDate","getFullYear","getMonth","total","getDay","checkForVacation","vacations","date","dateTimeStamp","getTime","flag","forEach","arr"],"sources":["D:/dev/Rest_Calc/src/utils/calendar.js"],"sourcesContent":["export function getDaysTillEndOfMonth(type, includesVacations) {\r\n    let dateToday = new Date()\r\n    dateToday.setDate(dateToday.getDate() + 1)\r\n    let endDate = new Date(dateToday.getFullYear(), dateToday.getMonth() + 1, 0)\r\n    endDate.setDate(endDate.getDate() + 1)\r\n    let total = 0\r\n    while (dateToday <= endDate) {\r\n        if (dateToday.getDay() !== 0 && dateToday.getDay() !== 6) {\r\n            if (type === \"week\") {\r\n                total += (includesVacations ? 1 : !checkForVacation(dateToday))\r\n            }\r\n        } else if (type === \"we\") {\r\n            total += (includesVacations ? 1 : !checkForVacation(dateToday))\r\n        }\r\n        dateToday.setDate(dateToday.getDate() + 1)\r\n    }\r\n    return total\r\n}\r\n\r\n// Les journées sont exclusives (ex. pour les vacances du 16 décembre, la journée du 16 est comptée comme ouvrée)\r\nconst vacations = [\r\n    // Automne\r\n    [1666994400000, 1667689200000],\r\n    // Noel\r\n    [1671231600000, 1672614000000],\r\n    // Hiver\r\n    [1676070000000, 1676761200000],\r\n    // Printemps\r\n    [1680904800000, 1682200800000],\r\n    // Grandes vacances\r\n    [1684533600000, 1694988000000]\r\n]\r\n\r\nfunction checkForVacation(date) {\r\n    let dateTimeStamp = date.getTime()\r\n    let flag = false\r\n    vacations.forEach(arr => {\r\n        if (dateTimeStamp > arr[0] && dateTimeStamp < arr[1]) flag = true\r\n    })\r\n    return flag\r\n}"],"mappings":"AAAA,MAAO,SAASA,sBAAqB,CAACC,IAAI,CAAEC,iBAAiB,CAAE,CAC3D,GAAIC,UAAS,CAAG,GAAIC,KAAI,EAAE,CAC1BD,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,OAAO,EAAE,CAAG,CAAC,CAAC,CAC1C,GAAIC,QAAO,CAAG,GAAIH,KAAI,CAACD,SAAS,CAACK,WAAW,EAAE,CAAEL,SAAS,CAACM,QAAQ,EAAE,CAAG,CAAC,CAAE,CAAC,CAAC,CAC5EF,OAAO,CAACF,OAAO,CAACE,OAAO,CAACD,OAAO,EAAE,CAAG,CAAC,CAAC,CACtC,GAAII,MAAK,CAAG,CAAC,CACb,MAAOP,SAAS,EAAII,OAAO,CAAE,CACzB,GAAIJ,SAAS,CAACQ,MAAM,EAAE,GAAK,CAAC,EAAIR,SAAS,CAACQ,MAAM,EAAE,GAAK,CAAC,CAAE,CACtD,GAAIV,IAAI,GAAK,MAAM,CAAE,CACjBS,KAAK,EAAKR,iBAAiB,CAAG,CAAC,CAAG,CAACU,gBAAgB,CAACT,SAAS,CAAE,CACnE,CACJ,CAAC,IAAM,IAAIF,IAAI,GAAK,IAAI,CAAE,CACtBS,KAAK,EAAKR,iBAAiB,CAAG,CAAC,CAAG,CAACU,gBAAgB,CAACT,SAAS,CAAE,CACnE,CACAA,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,OAAO,EAAE,CAAG,CAAC,CAAC,CAC9C,CACA,MAAOI,MAAK,CAChB,CAEA;AACA,GAAMG,UAAS,CAAG,CACd;AACA,CAAC,aAAa,CAAE,aAAa,CAAC,CAC9B;AACA,CAAC,aAAa,CAAE,aAAa,CAAC,CAC9B;AACA,CAAC,aAAa,CAAE,aAAa,CAAC,CAC9B;AACA,CAAC,aAAa,CAAE,aAAa,CAAC,CAC9B;AACA,CAAC,aAAa,CAAE,aAAa,CAAC,CACjC,CAED,QAASD,iBAAgB,CAACE,IAAI,CAAE,CAC5B,GAAIC,cAAa,CAAGD,IAAI,CAACE,OAAO,EAAE,CAClC,GAAIC,KAAI,CAAG,KAAK,CAChBJ,SAAS,CAACK,OAAO,CAAC,SAAAC,GAAG,CAAI,CACrB,GAAIJ,aAAa,CAAGI,GAAG,CAAC,CAAC,CAAC,EAAIJ,aAAa,CAAGI,GAAG,CAAC,CAAC,CAAC,CAAEF,IAAI,CAAG,IAAI,CACrE,CAAC,CAAC,CACF,MAAOA,KAAI,CACf"},"metadata":{},"sourceType":"module"}